import asyncio
import os
import sys
import traceback


def setup_environment():
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è"""
    # –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å
    current_dir = os.path.dirname(os.path.abspath(__file__))
    if current_dir not in sys.path:
        sys.path.insert(0, current_dir)

    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—É—Ç—å –∫ –ø–ª–∞–≥–∏–Ω–∞–º PyQt5
    os.environ["QT_QPA_PLATFORM_PLUGIN_PATH"] = os.path.join(
        current_dir, "PyQt5", "Qt5", "plugins", "platforms"
    )


async def main_async():
    """–ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è main —Ñ—É–Ω–∫—Ü–∏—è"""
    try:
        print("üîÑ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")

        # –ò–º–ø–æ—Ä—Ç—ã –≤–Ω—É—Ç—Ä–∏ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –∏–∑–æ–ª—è—Ü–∏–∏ –æ—à–∏–±–æ–∫
        from database import get_async_engine, init_databases
        from models import Base
        from sqlalchemy import text

        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ë–î
        init_databases()
        async_engine = get_async_engine()

        async with async_engine.begin() as conn:
            await conn.execute(text("CREATE SCHEMA IF NOT EXISTS public"))
            await conn.run_sync(Base.metadata.create_all)

        print("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞")

        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∏ –∑–∞–ø—É—Å–∫–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
        from login_window import (
            LoginWindow,
            insert_data_database,
            setup_database,
        )
        from PyQt5 import QtWidgets
        from qasync import QEventLoop

        # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        await setup_database()
        await insert_data_database()

        # –°–æ–∑–¥–∞–µ–º Qt –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
        app = QtWidgets.QApplication(sys.argv)
        loop = QEventLoop(app)
        asyncio.set_event_loop(loop)

        # –°–æ–∑–¥–∞–µ–º –æ–∫–Ω–æ –ª–æ–≥–∏–Ω–∞
        window = LoginWindow()
        window.show()

        # –°–æ–∑–¥–∞–µ–º —É—á–∏—Ç–µ–ª—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        window.create_default_teacher()

        print("üöÄ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!")

        # –ó–∞–ø—É—Å–∫–∞–µ–º event loop
        await loop.run_forever()

    except Exception as e:
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        traceback.print_exc()
        input("–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤—ã—Ö–æ–¥–∞...")


def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    try:
        setup_environment()

        # –ó–∞–ø—É—Å–∫–∞–µ–º –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—É—é main
        asyncio.run(main_async())

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ: {e}")
        traceback.print_exc()
        input("–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤—ã—Ö–æ–¥–∞...")


if __name__ == "__main__":
    main()
